#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <numeric>
#include <cmath>
using namespace std;
using ll = long long;
void setIO(string s) {
    freopen((s + ".in").c_str(),"r",stdin);
    freopen((s + ".out").c_str(),"w",stdout);
}
void solve(){
    int n;
    cin >> n;
    string type[100];
    int low[100];
    int high[100];
    for (int i = 0; i < n; i++){
        string t;
        int l, h;
        cin >> t >> l >> h;
        type[i] = t;
        low[i] = l;
        high[i] = h;
    }
    int lower = -10000, higher = 10000;
    for (int i = n - 1; i >= 0; i--){
        if (type[i] == "none"){
            lower = max(lower, low[i]);
            higher = min(higher, high[i]);
        }
        else if (type[i] == "off"){
            lower += low[i];
            higher += high[i];
        }
        else if (type[i] == "on"){
            higher -= low[i];
            lower -= high[i];
        }
    }
    cout << max(0, lower) << ' ' << higher << '\n';
    lower = -10000;
    higher = 10000;
    for (int i = 0; i < n; i++){
        if (type[i] == "none"){
            lower = max(lower, low[i]);
            higher = min(higher, high[i]);
        }
        else if (type[i] == "on"){
            lower += low[i];
            higher += high[i];
        }
        else if (type[i] == "off"){
            higher -= low[i];
            lower -= high[i];
        }
    }
    cout << max(0, lower) << ' ' << higher << '\n';
}
int main() {
    setIO("traffic");
    solve();
    return 0;
}
